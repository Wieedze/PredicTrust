{
  "address": "0x926AD51f22Fb0e8764A6feF375465A662E7a8BE0",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_initialSupply",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Burn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Mint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "recipients",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "airdrop",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x0f9419332922c31d391fde489d55168ec4a55c61e54762089523980618cc6d0a",
  "receipt": {
    "to": null,
    "from": "0x0B940A81271aD090AbD2C18d1a5873e5cb93D42a",
    "contractAddress": "0x926AD51f22Fb0e8764A6feF375465A662E7a8BE0",
    "transactionIndex": 1,
    "gasUsed": "900414",
    "logsBloom": "0x
    "blockHash": "0x65f3453a4867a873cc32891bc2d36e66c99be6168f2fcc11cb64fc8e02721d58",
    "transactionHash": "0x0f9419332922c31d391fde489d55168ec4a55c61e54762089523980618cc6d0a",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 2778493,
        "transactionHash": "0x0f9419332922c31d391fde489d55168ec4a55c61e54762089523980618cc6d0a",
        "address": "0x926AD51f22Fb0e8764A6feF375465A662E7a8BE0",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000000b940a81271ad090abd2c18d1a5873e5cb93d42a"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x65f3453a4867a873cc32891bc2d36e66c99be6168f2fcc11cb64fc8e02721d58"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 2778493,
        "transactionHash": "0x0f9419332922c31d391fde489d55168ec4a55c61e54762089523980618cc6d0a",
        "address": "0x926AD51f22Fb0e8764A6feF375465A662E7a8BE0",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000000b940a81271ad090abd2c18d1a5873e5cb93d42a"
        ],
        "data": "0x00000000000000000000000000000000000000000000d3c21bcecceda1000000",
        "logIndex": 1,
        "blockHash": "0x65f3453a4867a873cc32891bc2d36e66c99be6168f2fcc11cb64fc8e02721d58"
      }
    ],
    "blockNumber": 2778493,
    "cumulativeGasUsed": "900414",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "TTrust Token",
    "TTRUST",
    "1000000000000000000000000"
  ],
  "numDeployments": 2,
  "solcInputHash": "432e399050d7b3f6d87963cda7d22c18",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"airdrop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Simple ERC20 implementation with minting capabilities for testing\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"MockTTrustToken\",\"version\":1},\"userdoc\":{\"events\":{\"Mint(address,uint256)\":{\"notice\":\"Events //////\"}},\"kind\":\"user\",\"methods\":{\"airdrop(address[],uint256)\":{\"notice\":\"Airdrop tokens to multiple addresses (testing utility)\"},\"balanceOf(address)\":{\"notice\":\"Functions ///\"},\"burn(uint256)\":{\"notice\":\"Burn tokens from sender\"},\"mint(address,uint256)\":{\"notice\":\"Mint new tokens (only owner)\"},\"name()\":{\"notice\":\"State Variables //////\"}},\"notice\":\"Mock ERC20 token for testing TTrust prediction markets\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MockTTrustToken.sol\":\"MockTTrustToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":50},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/MockTTrustToken.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0 <0.9.0;\\n\\nimport { IERC20 } from \\\"./interfaces/IERC20.sol\\\";\\nimport { Ownable } from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\n/**\\n * @title MockTTrustToken\\n * @notice Mock ERC20 token for testing TTrust prediction markets\\n * @dev Simple ERC20 implementation with minting capabilities for testing\\n */\\ncontract MockTTrustToken is IERC20, Ownable {\\n    \\n    /////////////////\\n    /// Events //////\\n    /////////////////\\n    \\n    event Mint(address indexed to, uint256 amount);\\n    event Burn(address indexed from, uint256 amount);\\n\\n    //////////////////////////\\n    /// State Variables //////\\n    //////////////////////////\\n\\n    string public name;\\n    string public symbol;\\n    uint8 public decimals;\\n    uint256 public totalSupply;\\n\\n    mapping(address => uint256) private _balances;\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    //////////////////\\n    ////Constructor///\\n    //////////////////\\n\\n    constructor(\\n        string memory _name,\\n        string memory _symbol, \\n        uint256 _initialSupply\\n    ) Ownable(msg.sender) {\\n        name = _name;\\n        symbol = _symbol;\\n        decimals = 18;\\n        totalSupply = _initialSupply;\\n        _balances[msg.sender] = _initialSupply;\\n        emit Transfer(address(0), msg.sender, _initialSupply);\\n    }\\n\\n    /////////////////\\n    /// Functions ///\\n    /////////////////\\n\\n    function balanceOf(address account) external view override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    function transfer(address to, uint256 amount) external override returns (bool) {\\n        address owner = msg.sender;\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    function allowance(address owner, address spender) external view override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    function approve(address spender, uint256 amount) external override returns (bool) {\\n        address owner = msg.sender;\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    function transferFrom(address from, address to, uint256 amount) external override returns (bool) {\\n        address spender = msg.sender;\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @notice Mint new tokens (only owner)\\n     */\\n    function mint(address to, uint256 amount) external onlyOwner {\\n        require(to != address(0), \\\"MockTTrustToken: mint to the zero address\\\");\\n        \\n        totalSupply += amount;\\n        unchecked {\\n            _balances[to] += amount;\\n        }\\n        \\n        emit Mint(to, amount);\\n        emit Transfer(address(0), to, amount);\\n    }\\n\\n    /**\\n     * @notice Burn tokens from sender\\n     */\\n    function burn(uint256 amount) external {\\n        address account = msg.sender;\\n        require(_balances[account] >= amount, \\\"MockTTrustToken: burn amount exceeds balance\\\");\\n        \\n        unchecked {\\n            _balances[account] -= amount;\\n            totalSupply -= amount;\\n        }\\n        \\n        emit Burn(account, amount);\\n        emit Transfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @notice Airdrop tokens to multiple addresses (testing utility)\\n     */\\n    function airdrop(address[] calldata recipients, uint256 amount) external onlyOwner {\\n        for (uint256 i = 0; i < recipients.length; i++) {\\n            if (recipients[i] != address(0)) {\\n                totalSupply += amount;\\n                unchecked {\\n                    _balances[recipients[i]] += amount;\\n                }\\n                emit Transfer(address(0), recipients[i], amount);\\n            }\\n        }\\n    }\\n\\n    /////////////////////////\\n    /// Internal Functions //\\n    /////////////////////////\\n\\n    function _transfer(address from, address to, uint256 amount) internal {\\n        require(from != address(0), \\\"MockTTrustToken: transfer from the zero address\\\");\\n        require(to != address(0), \\\"MockTTrustToken: transfer to the zero address\\\");\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"MockTTrustToken: transfer amount exceeds balance\\\");\\n        \\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n    }\\n\\n    function _approve(address owner, address spender, uint256 amount) internal {\\n        require(owner != address(0), \\\"MockTTrustToken: approve from the zero address\\\");\\n        require(spender != address(0), \\\"MockTTrustToken: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    function _spendAllowance(address owner, address spender, uint256 amount) internal {\\n        uint256 currentAllowance = _allowances[owner][spender];\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"MockTTrustToken: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n}\",\"keccak256\":\"0xee1bb14174c063b447ef96c6b42fad9bec46da4ade14a7ab51f88a44d4e6d415\",\"license\":\"MIT\"},\"contracts/interfaces/IERC20.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IERC20 {\\n    function totalSupply() external view returns (uint256);\\n    function balanceOf(address account) external view returns (uint256);\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n    function allowance(address owner, address spender) external view returns (uint256);\\n    function approve(address spender, uint256 amount) external returns (bool);\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n    \\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\",\"keccak256\":\"0x69122efac36bf1af74c050204f80733aeeefe92989b083a8d3e01ca9fc5568aa\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60406080815234620003ba576200110890813803806200001f81620003bf565b938439820191606081840312620003ba5780516001600160401b039390848111620003ba578162000052918401620003fb565b9060209081840151868111620003ba57859162000071918601620003fb565b930151923315620003a25760008054336001600160a01b0319821681178355919491906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08680a3805191878311620002ac576001928354928484811c9416801562000397575b8685101462000383578190601f9485811162000330575b508690858311600114620002cc578892620002c0575b5050600019600383901b1c191690841b1783555b8051978811620002ac576002548381811c91168015620002a1575b858210146200028d5782811162000244575b5083918811600114620001ce57968092819286979899600080516020620010e88339815191529794620001c2575b50501b916000199060031b1c1916176002555b601260ff1960035416176003558360045533835260058152838584205584519384523393a351610c7a90816200046e8239f35b0151925038806200017c565b60028552838520909791601f198316865b8181106200022e57509883600080516020620010e88339815191529798999a1062000214575b505050811b016002556200018f565b015160001960f88460031b161c1916905538808062000205565b8a830151845592850192918601918601620001df565b6002865284862083808b0160051c820192878c1062000283575b0160051c019084905b828110620002775750506200014e565b87815501849062000267565b925081926200025e565b634e487b7160e01b86526022600452602486fd5b90607f16906200013c565b634e487b7160e01b85526041600452602485fd5b0151905038806200010d565b8689528789208794509190601f1984168a5b8a828210620003195750508411620002ff575b505050811b01835562000121565b015160001960f88460031b161c19169055388080620002f1565b8385015186558a97909501949384019301620002de565b9091508588528688208580850160051c82019289861062000379575b918891869594930160051c01915b8281106200036a575050620000f7565b8a81558594508891016200035a565b925081926200034c565b634e487b7160e01b87526022600452602487fd5b93607f1693620000e0565b8451631e4fbdf760e01b815260006004820152602490fd5b600080fd5b6040519190601f01601f191682016001600160401b03811183821017620003e557604052565b634e487b7160e01b600052604160045260246000fd5b919080601f84011215620003ba5782516001600160401b038111620003e55760209062000431601f8201601f19168301620003bf565b92818452828287010111620003ba5760005b8181106200045957508260009394955001015290565b85810183015184820184015282016200044356fe6080604081815260048036101561001557600080fd5b600092833560e01c90816306fdde03146107b757508063095ea7b31461078d57806318160ddd1461077057806323b872dd14610694578063313ce5671461067257806340c10f191461058457806342966c68146104a357806370a082311461046b578063715018a61461040e5780638da5cb5b146103e657806395d89b41146102e1578063a9059cbb146102b0578063c204642c1461019e578063dd62ed3e146101515763f2fde38b146100c857600080fd5b3461014d57602036600319011261014d576100e16108d7565b906100ea610908565b6001600160a01b0391821692831561013757505082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b50503461019a578060031936011261019a578060209261016f6108d7565b6101776108f2565b6001600160a01b0391821683526006865283832091168252845220549051908152f35b5080fd5b50903461014d578060031936011261014d5781359167ffffffffffffffff918284116102ac57366023850112156102ac57838201359283116102ac5760249384810160059186369187851b0101116102a8578535906101fb610908565b875b868110610208578880f35b6001600160a01b038061022461021f848b87610957565b61097d565b1661024e575b50600019811461023c576001016101fd565b634e487b7160e01b8952601186528789fd5b610259848854610934565b87558061026a61021f848b87610957565b168a5289600080516020610c2583398151915260209287845288832087815401905561029a61021f868d89610957565b16928851878152a33861022a565b8680fd5b8480fd5b50503461019a578060031936011261019a576020906102da6102d06108d7565b6024359033610991565b5160018152f35b5091903461019a578160031936011261019a5780519082600254600181811c908083169283156103dc575b60209384841081146103c9578388529081156103ad5750600114610374575b505050829003601f01601f191682019267ffffffffffffffff841183851017610361575082918261035d92528261088e565b0390f35b634e487b7160e01b815260418552602490fd5b91925060028652828620918387935b838510610399575050505083010138808061032b565b805488860183015293019284908201610383565b60ff1916878501525050151560051b840101905038808061032b565b634e487b7160e01b895260228a52602489fd5b91607f169161030c565b50503461019a578160031936011261019a57905490516001600160a01b039091168152602090f35b8334610468578060031936011261046857610427610908565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b50503461019a57602036600319011261019a5760209181906001600160a01b036104936108d7565b1681526005845220549051908152f35b50903461014d5760209081600319360112610580578235923385526005835283828620541061052a5791600080516020610c25833981519152918594933386526005835281862085815403905584815403905580518481527fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5833392a2519283523392a380f35b82608492519162461bcd60e51b8352820152602c60248201527f4d6f636b545472757374546f6b656e3a206275726e20616d6f756e742065786360448201526b656564732062616c616e636560a01b6064820152fd5b8380fd5b50903461014d578060031936011261014d5761059e6108d7565b90602435916105ab610908565b6001600160a01b031692831561061e5782600080516020610c2583398151915292826105db889660209554610934565b905585855260058352808520828154019055857f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885848351858152a251908152a380f35b6020608492519162461bcd60e51b8352820152602960248201527f4d6f636b545472757374546f6b656e3a206d696e7420746f20746865207a65726044820152686f206164647265737360b81b6064820152fd5b50503461019a578160031936011261019a5760209060ff600354169051908152f35b5082903461019a57606036600319011261019a576106b06108d7565b6106b86108f2565b6001600160a01b038216845260066020908152858520338652905292849020546044359392600182016106f4575b6020866102da878787610991565b84821061071d5750918391610712602096956102da95033383610b0d565b9193948193506106e6565b608490602087519162461bcd60e51b8352820152602760248201527f4d6f636b545472757374546f6b656e3a20696e73756666696369656e7420616c6044820152666c6f77616e636560c81b6064820152fd5b503461014d578260031936011261014d5760209250549051908152f35b50503461019a578060031936011261019a576020906102da6107ad6108d7565b6024359033610b0d565b849150833461014d578260031936011261014d5782600180549081811c90808316928315610884575b60209384841081146103c957838852908115610868575060011461083057505050829003601f01601f191682019267ffffffffffffffff841183851017610361575082918261035d92528261088e565b809293508652828620918387935b838510610854575050505083010185808061032b565b80548886018301529301928490820161083e565b60ff1916878501525050151560051b840101905085808061032b565b91607f16916107e0565b6020808252825181830181905290939260005b8281106108c357505060409293506000838284010152601f8019910116010190565b8181018601518482016040015285016108a1565b600435906001600160a01b03821682036108ed57565b600080fd5b602435906001600160a01b03821682036108ed57565b6000546001600160a01b0316330361091c57565b60405163118cdaa760e01b8152336004820152602490fd5b9190820180921161094157565b634e487b7160e01b600052601160045260246000fd5b91908110156109675760051b0190565b634e487b7160e01b600052603260045260246000fd5b356001600160a01b03811681036108ed5790565b6001600160a01b03908116918215610ab05716918215610a5557600082815260056020526040812054918083106109f75760408282600080516020610c2583398151915295876020965260058652038282205586815220818154019055604051908152a3565b60405162461bcd60e51b815260206004820152603060248201527f4d6f636b545472757374546f6b656e3a207472616e7366657220616d6f756e7460448201526f20657863656564732062616c616e636560801b6064820152608490fd5b60405162461bcd60e51b815260206004820152602d60248201527f4d6f636b545472757374546f6b656e3a207472616e7366657220746f2074686560448201526c207a65726f206164647265737360981b6064820152608490fd5b60405162461bcd60e51b815260206004820152602f60248201527f4d6f636b545472757374546f6b656e3a207472616e736665722066726f6d207460448201526e6865207a65726f206164647265737360881b6064820152608490fd5b6001600160a01b03908116918215610bc85716918215610b6e5760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260068252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602c60248201527f4d6f636b545472757374546f6b656e3a20617070726f766520746f207468652060448201526b7a65726f206164647265737360a01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602e60248201527f4d6f636b545472757374546f6b656e3a20617070726f76652066726f6d20746860448201526d65207a65726f206164647265737360901b6064820152608490fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220983031540bd4263e338b5a738f856aceaca65881036b9b128668df264a12049964736f6c63430008140033ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
  "deployedBytecode": "0x6080604081815260048036101561001557600080fd5b600092833560e01c90816306fdde03146107b757508063095ea7b31461078d57806318160ddd1461077057806323b872dd14610694578063313ce5671461067257806340c10f191461058457806342966c68146104a357806370a082311461046b578063715018a61461040e5780638da5cb5b146103e657806395d89b41146102e1578063a9059cbb146102b0578063c204642c1461019e578063dd62ed3e146101515763f2fde38b146100c857600080fd5b3461014d57602036600319011261014d576100e16108d7565b906100ea610908565b6001600160a01b0391821692831561013757505082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b50503461019a578060031936011261019a578060209261016f6108d7565b6101776108f2565b6001600160a01b0391821683526006865283832091168252845220549051908152f35b5080fd5b50903461014d578060031936011261014d5781359167ffffffffffffffff918284116102ac57366023850112156102ac57838201359283116102ac5760249384810160059186369187851b0101116102a8578535906101fb610908565b875b868110610208578880f35b6001600160a01b038061022461021f848b87610957565b61097d565b1661024e575b50600019811461023c576001016101fd565b634e487b7160e01b8952601186528789fd5b610259848854610934565b87558061026a61021f848b87610957565b168a5289600080516020610c2583398151915260209287845288832087815401905561029a61021f868d89610957565b16928851878152a33861022a565b8680fd5b8480fd5b50503461019a578060031936011261019a576020906102da6102d06108d7565b6024359033610991565b5160018152f35b5091903461019a578160031936011261019a5780519082600254600181811c908083169283156103dc575b60209384841081146103c9578388529081156103ad5750600114610374575b505050829003601f01601f191682019267ffffffffffffffff841183851017610361575082918261035d92528261088e565b0390f35b634e487b7160e01b815260418552602490fd5b91925060028652828620918387935b838510610399575050505083010138808061032b565b805488860183015293019284908201610383565b60ff1916878501525050151560051b840101905038808061032b565b634e487b7160e01b895260228a52602489fd5b91607f169161030c565b50503461019a578160031936011261019a57905490516001600160a01b039091168152602090f35b8334610468578060031936011261046857610427610908565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b50503461019a57602036600319011261019a5760209181906001600160a01b036104936108d7565b1681526005845220549051908152f35b50903461014d5760209081600319360112610580578235923385526005835283828620541061052a5791600080516020610c25833981519152918594933386526005835281862085815403905584815403905580518481527fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5833392a2519283523392a380f35b82608492519162461bcd60e51b8352820152602c60248201527f4d6f636b545472757374546f6b656e3a206275726e20616d6f756e742065786360448201526b656564732062616c616e636560a01b6064820152fd5b8380fd5b50903461014d578060031936011261014d5761059e6108d7565b90602435916105ab610908565b6001600160a01b031692831561061e5782600080516020610c2583398151915292826105db889660209554610934565b905585855260058352808520828154019055857f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885848351858152a251908152a380f35b6020608492519162461bcd60e51b8352820152602960248201527f4d6f636b545472757374546f6b656e3a206d696e7420746f20746865207a65726044820152686f206164647265737360b81b6064820152fd5b50503461019a578160031936011261019a5760209060ff600354169051908152f35b5082903461019a57606036600319011261019a576106b06108d7565b6106b86108f2565b6001600160a01b038216845260066020908152858520338652905292849020546044359392600182016106f4575b6020866102da878787610991565b84821061071d5750918391610712602096956102da95033383610b0d565b9193948193506106e6565b608490602087519162461bcd60e51b8352820152602760248201527f4d6f636b545472757374546f6b656e3a20696e73756666696369656e7420616c6044820152666c6f77616e636560c81b6064820152fd5b503461014d578260031936011261014d5760209250549051908152f35b50503461019a578060031936011261019a576020906102da6107ad6108d7565b6024359033610b0d565b849150833461014d578260031936011261014d5782600180549081811c90808316928315610884575b60209384841081146103c957838852908115610868575060011461083057505050829003601f01601f191682019267ffffffffffffffff841183851017610361575082918261035d92528261088e565b809293508652828620918387935b838510610854575050505083010185808061032b565b80548886018301529301928490820161083e565b60ff1916878501525050151560051b840101905085808061032b565b91607f16916107e0565b6020808252825181830181905290939260005b8281106108c357505060409293506000838284010152601f8019910116010190565b8181018601518482016040015285016108a1565b600435906001600160a01b03821682036108ed57565b600080fd5b602435906001600160a01b03821682036108ed57565b6000546001600160a01b0316330361091c57565b60405163118cdaa760e01b8152336004820152602490fd5b9190820180921161094157565b634e487b7160e01b600052601160045260246000fd5b91908110156109675760051b0190565b634e487b7160e01b600052603260045260246000fd5b356001600160a01b03811681036108ed5790565b6001600160a01b03908116918215610ab05716918215610a5557600082815260056020526040812054918083106109f75760408282600080516020610c2583398151915295876020965260058652038282205586815220818154019055604051908152a3565b60405162461bcd60e51b815260206004820152603060248201527f4d6f636b545472757374546f6b656e3a207472616e7366657220616d6f756e7460448201526f20657863656564732062616c616e636560801b6064820152608490fd5b60405162461bcd60e51b815260206004820152602d60248201527f4d6f636b545472757374546f6b656e3a207472616e7366657220746f2074686560448201526c207a65726f206164647265737360981b6064820152608490fd5b60405162461bcd60e51b815260206004820152602f60248201527f4d6f636b545472757374546f6b656e3a207472616e736665722066726f6d207460448201526e6865207a65726f206164647265737360881b6064820152608490fd5b6001600160a01b03908116918215610bc85716918215610b6e5760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260068252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602c60248201527f4d6f636b545472757374546f6b656e3a20617070726f766520746f207468652060448201526b7a65726f206164647265737360a01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602e60248201527f4d6f636b545472757374546f6b656e3a20617070726f76652066726f6d20746860448201526d65207a65726f206164647265737360901b6064820152608490fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220983031540bd4263e338b5a738f856aceaca65881036b9b128668df264a12049964736f6c63430008140033",
  "devdoc": {
    "details": "Simple ERC20 implementation with minting capabilities for testing",
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "MockTTrustToken",
    "version": 1
  },
  "userdoc": {
    "events": {
      "Mint(address,uint256)": {
        "notice": "Events //////"
      }
    },
    "kind": "user",
    "methods": {
      "airdrop(address[],uint256)": {
        "notice": "Airdrop tokens to multiple addresses (testing utility)"
      },
      "balanceOf(address)": {
        "notice": "Functions ///"
      },
      "burn(uint256)": {
        "notice": "Burn tokens from sender"
      },
      "mint(address,uint256)": {
        "notice": "Mint new tokens (only owner)"
      },
      "name()": {
        "notice": "State Variables //////"
      }
    },
    "notice": "Mock ERC20 token for testing TTrust prediction markets",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8,
        "contract": "contracts/MockTTrustToken.sol:MockTTrustToken",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 3019,
        "contract": "contracts/MockTTrustToken.sol:MockTTrustToken",
        "label": "name",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 3021,
        "contract": "contracts/MockTTrustToken.sol:MockTTrustToken",
        "label": "symbol",
        "offset": 0,
        "slot": "2",
        "type": "t_string_storage"
      },
      {
        "astId": 3023,
        "contract": "contracts/MockTTrustToken.sol:MockTTrustToken",
        "label": "decimals",
        "offset": 0,
        "slot": "3",
        "type": "t_uint8"
      },
      {
        "astId": 3025,
        "contract": "contracts/MockTTrustToken.sol:MockTTrustToken",
        "label": "totalSupply",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 3029,
        "contract": "contracts/MockTTrustToken.sol:MockTTrustToken",
        "label": "_balances",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 3035,
        "contract": "contracts/MockTTrustToken.sol:MockTTrustToken",
        "label": "_allowances",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}